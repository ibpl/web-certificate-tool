// SPDX-License-Identifier: AGPL-3.0-only
// SPDX-FileCopyrightText: 2024 Informatyka Boguslawski sp. z o.o. sp.k. <https://www.ib.pl>

import Key from './Key.svelte';
import { render, screen } from '@testing-library/svelte';
import userEvent from '@testing-library/user-event';
import { OWNER_ID_MAX_LENGTH, HOMEPAGE_URL } from '$lib/common';
import FileSaver from 'file-saver';
import { errorDialogMessage } from '$lib/stores';
import { get } from 'svelte/store';

const noKeyFoundErrorMessage = 'No private key in PKCS #8 PEM format found. Key was not loaded.';

const invalidKeyErrorMessage =
	'Invalid key or <a href="' + HOMEPAGE_URL + '">unsupported</a> key type. Key was not loaded.';

const invalidPasswordOrUnsupportedKey =
	'Invalid password or <a href="' +
	HOMEPAGE_URL +
	'">unsupported</a> key type. Key was not loaded.';

const testKeyEncryptionPassword = '1234';

const testInvalidKeyPEM = 'dummy';

const testPKCS12048KeyPEM = `
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAyxysb3pja+L3XDoHNgJ2TNwAOdKx7r+BWdVngW4h9QHYjXNG
qOlucc4olV24EBNcjkaFqWD0foWtpQYu3Y6Xl7vGMp2hVLDx27H3R3plAcJG0YGl
ZsqDFED3IVrXW7EDyLFKCfdg6WMKtJQ3TVIRHxmy3RUro5ICItfGO0Ah3b4pI+4z
ioAHARwJ1bCjhPFMxqjUjbzjtelix3AtnQUjD7czsrNRvxfRDmtEIWWQ3P/JbQop
7DesUTozQe9qfVMEzJIOHWgT/ENZFfzByz+g0UFkYjZ1ZtmMc+5A+BodadGUFKGM
xe/LPmggjWGPDAZbWSPuqCFCB0aedY7z2kaJvQIDAQABAoIBAE7DUcLxDPjbTN0A
y6cQEVwAvD2wDLvum3SAouC4GobuLlG78By0WNXdAjPZ4fSp7WxmwJJMPMOLhyjF
WwsjrnlyoYsjQVqcO03cl22qctzZv6iiw8c2pNoHz02p8nVmEXeT+Igg2/3lIFOi
XkenmWgcCRZejUui5R0p239CgV+BGxxQfw7LZIetKUa3p8C8sypA0Oee4LXU0KPv
zNNDpwQycRUKJBY6DF8kw58qf/JvTDqmnICUetgzNLRmMSkH4/e7GFOxdBWHjJsh
0iZEsNxcA5DTtmbi4kKRQpu6e3ObHj2jaqvaUuu7yzKpGZpo90yrbtz8YB2OkAD+
ZQ7D64ECgYEA9K5QXbVVwzysk+F15UiFMlk0dfW4gGcDQ5c6M+gtFeA/pJYdxURf
tEWk2q3j17xH2rVHciLjwBNWo98aEDsg3ldj2BYfIRHXrDEeRO9YswbzJryVYckH
5RfSDIfoNXFx8JO19ALjwedBD/PHwpG4ZG9oBHNI4PyKoYktQopJQfECgYEA1IIS
KrJEXG+U+95CsjmOkx1px+9QRqclExKhq5aUS+HosC1VaVcjqvxMTAnG/s4BTIUV
ggYepDYsHkSlJZBApUNJkboQ7I9IN2S73QRJfmPu3l3GO/vZazAn1mzhRLkmBYc6
xNRSlNAvUML6eoHQO+Czem4b4OQ6T2g3pYkIuI0CgYB1G6UdZLgajMSwtr1dsxsF
IQrp1mSrGCLIy+2wgFRr3vu3A55WF0aTGq4veADP9a6ScCc06pwFB3x1TEfGMval
VEBWYSgfBNIr+Qpaxg+3CAGCrcn1lmkv7fm7w6SRR63YDmqM0oE+AjfysaQPbP1L
HMM1NhRQkq6rZ+OAsH0lkQKBgQCp9YmQCllwUHGoa1+OaUglUw3qMPVUPJQDSBBz
SpA6jGhslyVLhbzqILToz50O5zXUvE+yWTCihw0L/DzU6SU6x7EMUvL8L7BDVVaG
8snQwx4lTHyiNs/x0WbbMOON8kJ9g2U2TNXrXQGqpvZrim0/pnwE/BFh8UbNgX2X
8BxAdQKBgF1bmRM8ulUAHHSXL4PUj+F6m4ULwC5BPTEkQHWfk734HPsyVH6sXbh4
u4Ahht07q/YcGcIlyP0Vmrh/a8fab3jFZ0eA9Z2llC0CzKaoNqAz1TSRYI6rKNWh
smqPrkoRL/WwIbgRej0PlNg184PiMXEc/1EBtbGKmvKeZra90b0P
-----END RSA PRIVATE KEY-----
`;

const testEncryptedDESRSA2048KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFHDBOBgkqhkiG9w0BBQ0wQTApBgkqhkiG9w0BBQwwHAQIvxXffwUUthECAggA
MAwGCCqGSIb3DQIJBQAwFAYIKoZIhvcNAwcECPVH9+umD/RHBIIEyGCcxA80fcsu
3dIFOF2MASya697PSCiFo+Njmp1QQss0j0+BjsM7tLJQFsTX4vo4BGn2PvEjXGVg
Fyy7VDXpGMgUtQ4ClVJ0ZNFx2CKGW+iSGTpKCvda9DT6Gkx+bWaZWHgqS6CcAN8d
LLkKlztDQCU1Sw/F06KPmBjaxGNINz6DdH6ZjIot7wY94dk46c28+AJ1v2msNkNx
yc2FE1+PKszWFPxF5MLBYLZPz1IDXzJsfofAPYuDlgoyXJhxmU1stOJsOamvhcLC
s1n6ot/sla/JPPHXSETH6KPvAMXYJhDqpfH9T+4R+R6ir3TffrouM4gJXyGWqCME
jRxB8oZn8j+fEUmlO3u2YThr2ZogUroDOHIzoapkL9Ui4Spum65cvgeUZLj0KgY1
dDIDcWU+Q13rDiJNhvVGWfr7csZXl7Ok/lwjfSGEQOi01u3NqJm2c1bqebfBqSfM
yfbh941WcxePiJKW9mOBoxyMPS5v3C32NmDAxtwIQg9f3bSG9mLgHvQhPdwhzeP0
0/qPPPtV1krDpzycO6S3nXVXwaSyHaffSfv7K3OayCS5KG9+XZMQS05Kg85V3xXc
7/pajrX60QJFrLDWxBCHOitgXfhGRGtRMACESTMTqsFxi8coAUIgehHhEIbqxaA2
ZdZH9FiclVLmDWfMx1yD+OnVpiFBCR37RPbwoVnSfD5bNXsZzHBstgynylE1RtE9
UqNZw4AyMDk4C74BI5iPtI2F129Jh+zMvvpAVtMCul323Pg5wPc4nYxBKoABztc5
sqRjHjnp60T2+kqJlnNSheiyQXQOd7sGLRmkPEGXxCZVe+GbDifI5Xsd4eAqzNbq
oayF5sBZrQFsCpJo7MLR7TihDasPxOZN3oalnE6Yz3GwFQW56uOhz8vQwlBQWNJ6
5debcvu+BU6yRZvWs4CmmihAakiSltcCcMfzYDlg9a4DMRqFUw0PYoT8Y9nTMr7G
ZhFP0F+pzi6hI+eRttek7qBbgDylztmV2T9Np2E93m+H0fFOhAwnsXHo6g3dYx7m
DuS+4JCOBZPOlsKoobWNEq62dWHSYReFwnJMo3unhNCwCPn18M2Z1MZ305fbIzQ0
CGH1Qb9bGYw+k8B6Fkvrlr0KxtqyiSBqbYtZVHY+B6b4+dIGMm5lQ8tRVZBcHnHR
3R8gLCPqLtE69FKiDsBJOHoBxH4aSOTV6XhoOzjm2mNQfdhBlwe5WTFB0FgGivvt
mqkr9ITlL/DtuB4xmaTbfOOyqqecgvDRpvNX+MGWqu+DstMpeEL16LU8VbhNYq8f
nBKQ5DkHWtWw8URffyRPlr4md6YFZinX1vElOP++BXXZTZVxxkq1im+1+b6Y4Mw1
FRR0vlo/r8MEwtoNdzfKw5fwEVyaUwfxUt0Ps6CAKzTBt8yK8d1riUa+7MT1UwGs
8rOwLcu0OjBDjaKexLofr/hX8l7r3GXUuqM7TADEZUNyFnpgq2KMegBXghVjhV++
zStxI2mNRfTpLO2lRUzuqwHWqknUNbBkSl5dshLUPU3Yv4zyJdAU8udGO66/HY1v
ACNrvnUtToY8xtpzzcH3g6nG4z3hkCMWALHIlq474uupQdoPOaYcluaZ3GSxl8h0
Zxzt/hKwhybjXkuL76d+tw==
-----END ENCRYPTED PRIVATE KEY-----
`;

const testED25519KeyPEM = `
-----BEGIN PRIVATE KEY-----
MC4CAQAwBQYDK2VwBCIEIKozp1cc6ZDsS5rXqdtF7erFEVp5mSDX9jo86wa/RENL
-----END PRIVATE KEY-----

`;

const testEncryptedED25519KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIGbMFcGCSqGSIb3DQEFDTBKMCkGCSqGSIb3DQEFDDAcBAgg4lNrVVAMogICCAAw
DAYIKoZIhvcNAgkFADAdBglghkgBZQMEASoEEFBIM+9mQtE4VjWXjkMy6eUEQEFm
hRSBMBiF942QGGoqBqiVewvnBdk1WbDwk4lG0V2a2LeZk8UFvpCzMbAAVDKCZ/HF
KRlNgiKunOwYDEtvBA8=
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA512KeyPEM = `
-----BEGIN PRIVATE KEY-----
MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAzZaeoZu+OxBqpMO/
b9MuZGhuQm8j8tOkxFlRms6latjuEg6zaRceQfmcm9o5Qe1/J8RCNtZskxqR5S2W
CUI1dQIDAQABAkEAhD7oKdLSSpIj13rncRpqVEJs8qUlfbUw3vEJskhNVe2vh5LP
Zj41na9q06vmdud+EqSLBk4br7dkyWVvFHowIQIhAPM91agDyjyInMTPc2VuwA06
frzttJMP8qgN6h+ds9n9AiEA2F8w2MTE4cwuZzT8DZzEkPyvnbEvMnhSb7YU8zrE
htkCIQDKh6nmg4FYdcdSeAj1ZAm0+gec969q49R/6VYPjRe7YQIhANIDWwsbuimc
IHImeHvR7Oz5ho+d2jy3kvRBHIaVRQnJAiBUkEpcEJpr8lH9cRW7UvunJ8txkhIa
Hm6IhTwZP6n3bQ==
-----END PRIVATE KEY-----
`;

const testEncryptedRSA512KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIBvTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQIUidf8LFjongCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBBAyIGV8ywpH5Vc+GQ3E6p+BIIB
YLBEa2vT4zEpH4FjFQ8ISWGI+s7YRZTXq/YsSbhZa+uPIITUsQVK+imdiGU77xlY
tpM2VLisD9dJRhhCzzFhowbmqEusOVwqTKdd9aCRVPOqvQR4Lq6ercga701HECKp
p11va//jWZtKLdXWB99fZvCS1JYlrvPCLXoV5kZYHN+Cl/jbpM52Nf5jyWXhkFJo
uEjDmwCXg5EZJh/ToPvY+8Be85dDhuoj9iUgGlqUx3oGdVMZViJPZDuWxs1Fp/vV
fzs5BHJq4JgKM11ak2QtGhi9mfpuAo5hYpa0BPA8T29nAVFUTP439zYywmZvbXDo
dClGUReGKVpWO77MX80hdkjU5IJyJqDupRZuTSIFllwQ3HiBNpWs7tIM5IVDq0m/
7EYHhMq3+BOyFb98xaLRhERM0aAgf98TIVtgGJQrMOmkh97m56Vur6qpPqk9m9Jr
10PNexFjq80E80b7Q2xQVcY=
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA1024KeyPEM = `
-----BEGIN PRIVATE KEY-----
MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAMI/hr+ABqex29NS
MT0bsbY9SEnx5Z4Dk9g4/+eohrNhXNYi+tOdCmznEsFPAe22jFx/CsnfxLkXnBTd
dkRTLYdDtqhKxP3tGlR0L5PqixpLWuJScTNIBQ7OfqOhOGyP+re1tzxYJ2fGuE0E
py7WYp0nPiurqnOk93ylmTcu9pvPAgMBAAECgYEAlZ00fl9vwM4/UN7nyfeAw6sj
+MB2aWS8BTix8o5dYeDGDrFWnJNCqmq4iWf/RkbqiXvYpXDTJvVGZNPG+g1O7Jx2
jSa8v76rsm4ptCimLSMfV3Bet+g7fZcODvu2jRn4U3FlUHA14GHz2RymS/fjeInv
LaldxVuARw0mG2iaIqECQQD7nOEuqM2PGkiSEMTZFaNoremm2pF5e8izk1e3k5MN
pUT+iZqFaQTtDdDNRr/cUT3M6qS4oFVjEV2xNO4fGCbJAkEAxaKWxY9kHBf1RnHE
YCrFrhoWVxDS4lQN48NaY0/d//VI9UUiZhHUcWT4OPZF/OaOevpnAZZnHlbboMwQ
6q1B1wJBAPsAm1sSpk2VqMOd2uG8xlEM/UOoUutf4u3RlPXbUB2Su2s5Fl70Tye0
WpINfCRrHz2m7kAIImY70r2O0eVPEJECQQChTYdC7Tpm14L/oMEHQEGhTHdpTjjg
Mnw3peyy26+0RYzraiaeKfU7K46QZyhONhqZ8p95ozi8gWW2AnfYIdp3AkAJw0Di
3dxHnGaDvFlU22CcdAz5IEzSi86B1BlFtuXm7WZ3Q9fd5hOSorn/ytEFHJIGfndx
H6JY7RLn2lmAW93A
-----END PRIVATE KEY-----
`;

const testEncryptedRSA1024KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIC3TBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQItm4YIB5K4L8CAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBAP3OL5j3PaM4Edr4JOEIRdBIIC
gE+ZJJC+ya54FcNMHiQEFvKB9U/X2Fm1fxrhWoy18OeEpZ3l0uUTOgktWwHthfSE
8Sipuz1JSCJeJ3wwjT8ylo2nTgdtqRk4XpqezDqWQ/HD5a6y0JhHiZzfMwJ89Lg4
cyjDDJEQwo+2rz5q1F9QJwl4//0iageCMU208Rf+qs/EaKPO6Kfor4fzfU2o6VzX
U0KnJOjBtDvxcK0AGzhgYRS+EO+P76XVZ6iIWJT0u314r8WA9PbbSrYnVwYON/s7
uNYhTGU4lgc94FiOHlDII31R7JSOkXa0By68aPRqSvYgErmtmh3+y5uvLtu0PNn4
V9XibtajKAUzGtTHptlVcCiG3sNxiJqR57/B2JozqPA4ZTG2U+IIgBWO+a8y7eYD
isAmBpWbt7Gh1KBWPXtwKb1TzqgiLJgnEV55yXwe0jE8FVQEo4GjqyxspNvseyWN
5wAPawCZWR6zS4WAZen1tQomymyH57H4vyRiHkidyw79Al6R0dRr9d05CaxNNtlb
YLgkD2cTzWhTEKdiCwtfRFjBNw+4jh2HV2Msf7EjUqlYT7Q54YkBM/3ZGLMWff4/
K+rEq6/ioOawqiDNxT15zLeZB7I0SeZp03/gD55BDmfU/GpWHm0ggyQiKbrntlGC
pEK4JI8fZ45VcmeNAiV65ml9fF5v8rrLshqjcbuBn4GcsivuEXm8jKB+8ncKC+2Y
sCfMgburqHdlgWGJqhE1gXpkeqyEp43FVSl2JjJ9l+fQSwUwo+MFuVr9YPMNUlj1
Ld4C8Zt2QA9ur6WOK1BVVDuxbwlTs6/VI6EOGRx5XoGioHfH/ZzoxY0z000S/ZaM
bEGBb3m1wzz6opIwXLtPO/M=
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA2048KeyPEM = `-----BEGIN PRIVATE KEY-----
MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDWd36XkqIpXeqr
C8aXgfOPKhQuJgySAq6i42AUup+GD+hPp+TGBtGYfHZlwhVEvSChZoyCXuPUAcam
GwdN04XBU882JzqQrLJg5QYC0C3gIRSpYPxHlqoI5f6Lm3IsqKx0qrPB62Cs9Lxy
EHBwiZ46LathqMlk2SLED8VR216Blx6jBpw5KZB19XGIqzw5flWibfBXqVYIiiUC
driPh17V6YVey++poY7sApcVIzKyhKhGmqgCa013PrHQ60bOLtiFDyTWCsCVHqYk
Osz5Bo3h0G9Q+fZ5Q0/IuSdJ0hGqKnvFxd/W23jnabxAD815phAU3dFlWpRm7Kgm
Ww8P3CSrAgMBAAECggEBAImI4Bn74xp8K/2884I9yB/LcF2X8P/B0JSNFBS3CY5D
rUtH9CI6RTdwuczQBiuqzb4zsW/5wkk3SllDhA+Y0nIEeSHVTm1xEoOo2436SzEs
hb+Jfr+6ExjZxb9p1HJnSREYV2bIt5qy6BaODE1fM6VDnGBoiZ6u0OjC5Ft2PskD
H5RD4R7vqi4hL5Gv8zVeVGH4NQOy1DwVOQL/PPejlZdiAAiuwf+noDzQgzTpPh3h
t7LHRe0cMB/uGPB4XQyLxQrkWS8QvI8VP/v7zGg9Km8VIntJlUMqZyJazPUFa2yt
N59SvO35NriUWsobMfyJxPutbWJdKVMMJgPKk56QSuECgYEA9+oAwLlGmLP7NefT
+DpEwb1Z/zxgEbd70fJzov05YsTnXdIBhiw0PqlRpuIq2ulabmBg5nLmj/GmlBrK
CgzTDbtoX2zZPPSvEKE3KV0ttv/eYhVzzpS11YNkoA+mBXjjzoeqIFLtdsMEf+FH
YtKHos3BO1QT+PWHw/WiDdkV52cCgYEA3XY32GmWjaNzzW7+XZJnGsznjjX3bRwa
QaowvnM8e7gtW08CVkzbte6H6HFElgTDFKrB81Xb1i2fwuN28XA+U1XvWmeZF0Dq
SlbRZY0396CT32Ak0MKQ3+pwIzxNOsoWbsrlzZgEfiXKNP9C2UUsmQ1mvvPmnLVp
UbwDGfYo4h0CgYEAy7sYjUh01I6rtbvi/Q3dbR1PdSnHhSe08G5/SwUwAJPx0q7/
I6T19jys5ijcsPOtpiE74IWyJb6fdvyg5itt0c4d0rWfvLEToOXrb+mr5MRWm2In
vi+FUoZczhCuDbcv9oyUaWXc0YkoDHM0d+itIERYNIo+s4wK2yXj2993WacCgYEA
irqplRnfw+5mdoRXN4qkp/c//qfzzRfTotrYGhXaB66CSzadQi53W+qGnKeHzWpC
QkoNoT9hrTN7ZvxS4D/t6wpkG//VuOljWxozpifmrWqb90wlA9k+I+aaRJhb0L4T
e2gCuN3HwrYtizF0UOKyY1YvzOLAzd4ekaLzVmoLhkkCgYBBaOL0titx6cSGfZcw
p4KANr54jduC3zHHsdvbgffKOOg6Ny5ryXQ0jSb3rMQblVh/3wR0FcjTyTyBbqXG
3W6VM3Krmh7HWtvv1IvwUX2YYPP97W+1ph09aNGe0KXrYTqM+jiaBNQGoA36cFcl
v9L9iuxoXA5IjjauCYIPNbDxrg==
-----END PRIVATE KEY-----`;

const testRSA2048KeyPEMMacNewlines =
	'\r-----BEGIN PRIVATE KEY-----\rMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDWd36XkqIpXeqr\rC8aXgfOPKhQuJgySAq6i42AUup+GD+hPp+TGBtGYfHZlwhVEvSChZoyCXuPUAcam\rGwdN04XBU882JzqQrLJg5QYC0C3gIRSpYPxHlqoI5f6Lm3IsqKx0qrPB62Cs9Lxy\rEHBwiZ46LathqMlk2SLED8VR216Blx6jBpw5KZB19XGIqzw5flWibfBXqVYIiiUC\rdriPh17V6YVey++poY7sApcVIzKyhKhGmqgCa013PrHQ60bOLtiFDyTWCsCVHqYk\rOsz5Bo3h0G9Q+fZ5Q0/IuSdJ0hGqKnvFxd/W23jnabxAD815phAU3dFlWpRm7Kgm\rWw8P3CSrAgMBAAECggEBAImI4Bn74xp8K/2884I9yB/LcF2X8P/B0JSNFBS3CY5D\rrUtH9CI6RTdwuczQBiuqzb4zsW/5wkk3SllDhA+Y0nIEeSHVTm1xEoOo2436SzEs\rhb+Jfr+6ExjZxb9p1HJnSREYV2bIt5qy6BaODE1fM6VDnGBoiZ6u0OjC5Ft2PskD\rH5RD4R7vqi4hL5Gv8zVeVGH4NQOy1DwVOQL/PPejlZdiAAiuwf+noDzQgzTpPh3h\rt7LHRe0cMB/uGPB4XQyLxQrkWS8QvI8VP/v7zGg9Km8VIntJlUMqZyJazPUFa2yt\rN59SvO35NriUWsobMfyJxPutbWJdKVMMJgPKk56QSuECgYEA9+oAwLlGmLP7NefT\r+DpEwb1Z/zxgEbd70fJzov05YsTnXdIBhiw0PqlRpuIq2ulabmBg5nLmj/GmlBrK\rCgzTDbtoX2zZPPSvEKE3KV0ttv/eYhVzzpS11YNkoA+mBXjjzoeqIFLtdsMEf+FH\rYtKHos3BO1QT+PWHw/WiDdkV52cCgYEA3XY32GmWjaNzzW7+XZJnGsznjjX3bRwa\rQaowvnM8e7gtW08CVkzbte6H6HFElgTDFKrB81Xb1i2fwuN28XA+U1XvWmeZF0Dq\rSlbRZY0396CT32Ak0MKQ3+pwIzxNOsoWbsrlzZgEfiXKNP9C2UUsmQ1mvvPmnLVp\rUbwDGfYo4h0CgYEAy7sYjUh01I6rtbvi/Q3dbR1PdSnHhSe08G5/SwUwAJPx0q7/\rI6T19jys5ijcsPOtpiE74IWyJb6fdvyg5itt0c4d0rWfvLEToOXrb+mr5MRWm2In\rvi+FUoZczhCuDbcv9oyUaWXc0YkoDHM0d+itIERYNIo+s4wK2yXj2993WacCgYEA\rirqplRnfw+5mdoRXN4qkp/c//qfzzRfTotrYGhXaB66CSzadQi53W+qGnKeHzWpC\rQkoNoT9hrTN7ZvxS4D/t6wpkG//VuOljWxozpifmrWqb90wlA9k+I+aaRJhb0L4T\re2gCuN3HwrYtizF0UOKyY1YvzOLAzd4ekaLzVmoLhkkCgYBBaOL0titx6cSGfZcw\rp4KANr54jduC3zHHsdvbgffKOOg6Ny5ryXQ0jSb3rMQblVh/3wR0FcjTyTyBbqXG\r3W6VM3Krmh7HWtvv1IvwUX2YYPP97W+1ph09aNGe0KXrYTqM+jiaBNQGoA36cFcl\rv9L9iuxoXA5IjjauCYIPNbDxrg==\r-----END PRIVATE KEY-----';

const testRSA2048KeyPEMWinNewlines =
	'-----BEGIN PRIVATE KEY-----\r\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDWd36XkqIpXeqr\r\nC8aXgfOPKhQuJgySAq6i42AUup+GD+hPp+TGBtGYfHZlwhVEvSChZoyCXuPUAcam\r\nGwdN04XBU882JzqQrLJg5QYC0C3gIRSpYPxHlqoI5f6Lm3IsqKx0qrPB62Cs9Lxy\r\nEHBwiZ46LathqMlk2SLED8VR216Blx6jBpw5KZB19XGIqzw5flWibfBXqVYIiiUC\r\ndriPh17V6YVey++poY7sApcVIzKyhKhGmqgCa013PrHQ60bOLtiFDyTWCsCVHqYk\r\nOsz5Bo3h0G9Q+fZ5Q0/IuSdJ0hGqKnvFxd/W23jnabxAD815phAU3dFlWpRm7Kgm\r\nWw8P3CSrAgMBAAECggEBAImI4Bn74xp8K/2884I9yB/LcF2X8P/B0JSNFBS3CY5D\r\nrUtH9CI6RTdwuczQBiuqzb4zsW/5wkk3SllDhA+Y0nIEeSHVTm1xEoOo2436SzEs\r\nhb+Jfr+6ExjZxb9p1HJnSREYV2bIt5qy6BaODE1fM6VDnGBoiZ6u0OjC5Ft2PskD\r\nH5RD4R7vqi4hL5Gv8zVeVGH4NQOy1DwVOQL/PPejlZdiAAiuwf+noDzQgzTpPh3h\r\nt7LHRe0cMB/uGPB4XQyLxQrkWS8QvI8VP/v7zGg9Km8VIntJlUMqZyJazPUFa2yt\r\nN59SvO35NriUWsobMfyJxPutbWJdKVMMJgPKk56QSuECgYEA9+oAwLlGmLP7NefT\r\n+DpEwb1Z/zxgEbd70fJzov05YsTnXdIBhiw0PqlRpuIq2ulabmBg5nLmj/GmlBrK\r\nCgzTDbtoX2zZPPSvEKE3KV0ttv/eYhVzzpS11YNkoA+mBXjjzoeqIFLtdsMEf+FH\r\nYtKHos3BO1QT+PWHw/WiDdkV52cCgYEA3XY32GmWjaNzzW7+XZJnGsznjjX3bRwa\r\nQaowvnM8e7gtW08CVkzbte6H6HFElgTDFKrB81Xb1i2fwuN28XA+U1XvWmeZF0Dq\r\nSlbRZY0396CT32Ak0MKQ3+pwIzxNOsoWbsrlzZgEfiXKNP9C2UUsmQ1mvvPmnLVp\r\nUbwDGfYo4h0CgYEAy7sYjUh01I6rtbvi/Q3dbR1PdSnHhSe08G5/SwUwAJPx0q7/\r\nI6T19jys5ijcsPOtpiE74IWyJb6fdvyg5itt0c4d0rWfvLEToOXrb+mr5MRWm2In\r\nvi+FUoZczhCuDbcv9oyUaWXc0YkoDHM0d+itIERYNIo+s4wK2yXj2993WacCgYEA\r\nirqplRnfw+5mdoRXN4qkp/c//qfzzRfTotrYGhXaB66CSzadQi53W+qGnKeHzWpC\r\nQkoNoT9hrTN7ZvxS4D/t6wpkG//VuOljWxozpifmrWqb90wlA9k+I+aaRJhb0L4T\r\ne2gCuN3HwrYtizF0UOKyY1YvzOLAzd4ekaLzVmoLhkkCgYBBaOL0titx6cSGfZcw\r\np4KANr54jduC3zHHsdvbgffKOOg6Ny5ryXQ0jSb3rMQblVh/3wR0FcjTyTyBbqXG\r\n3W6VM3Krmh7HWtvv1IvwUX2YYPP97W+1ph09aNGe0KXrYTqM+jiaBNQGoA36cFcl\r\nv9L9iuxoXA5IjjauCYIPNbDxrg==\r\n-----END PRIVATE KEY-----\r\n\r\n';

const testEncryptedRSA2048KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQIGZRfPvef62ECAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBBJ1jF4wc+8uwj/97R+pou6BIIE
0BM8sAHspoEOD+J9huAh5EGzSTJcjA6LAiVRxwjd3X7aLNLB5dsQ0hdBIv7vtLLI
L4SOUyHr3aMOcFElEgnYvugMf0zAqyObaQYprEs+eEUoCv8VTnc7NplBlC8YM0wf
L4TqSGtPCNdSv276cAfULi85a/QlXpTWABA7P1vwUIDuIEGxkDvRF+CitZvERAIf
SJLbHvjq6dMEspOE/sRfSz6tTGPH9RYGiCkz3v+G6TXqSg2DXvZyAv/lin8fK6a6
4K90wNOl8T6bj25UNWw0QIo0/Jaf7i/y6dSCu6k0eOtJjzKQif7FIh0byWb52S6J
iplRSbEkrJ9rPevAcDuesSUN1ev51J/h7lEIBmmkFp8hSdjseDzayH/iQW+gJkXF
trwlcj4M0mIhWz4u3QgcMn5RnG8LZ7vIARoUgZ4UVm6J+SbLrdRtbwYguOFfpQz3
IlnkoXQAlfdCa0YVWrVAW7ihGuIsfra3K+/vOCwgTef0yOmL9qWRCSh1tMy/2tpp
6Ir/31GDTVFda23dyt6Z8DWA5RzeQFPxuO2DTrkdHHLarx0qj4zd4cEikpOExkkd
rxHOC3CGzn4wKCX+9Q49NrgzMlsb2fsJN4hqw22t+h5Kqf3a24d4cGZXIIIi+dMb
Xe1dRMF8JwRaEsdg+WEebq7RCWNL49acEhqiOvwoF13+e1yya5BzRw/Rj78SA97A
6Pq+IvwslRSO3mrLyoDvm/G0Dyd+oyRqnhXjveQAkpNYkCHoB39HMS+vskbm3z37
JifmEuaixUcBGGjEugz2WNZUg/Gp2VU9K4ZBbjS3pXhk2tQhGNArH5V+t9Be7jpU
3CTXJrFhHUXRh5aNFJXPcAkgXoGV6mETVURnl/5Wi2yxkzYtlz4/viWxJSqwEFLz
N1LXEEmeZ1xPigXcdrHoXJUzs28oXOuRqOirbC7Lrqu4dpkmU+uGZumOK/JDJFlz
jfVljYYqmftEF4KWPiBg02Kd+duJ3oiQypydPqPjXtxdEKL0hDGflwntCwyZsRmd
saHFMtOt6kyXnTqJdYn0XkdRq3MMIXer4YI2runcDLsRrSXsmQkl/unZ1QcZuSDX
sEisq2ztjtuoMazLeyfyQ+tkfzg7K35e92axC+rC3BRAV7LbKw7Ck7qAdsNWR03z
fC2olIYzWptZNP3uM9wj4U/f40wdCkXRmTJ7EJFn3ClwCrYq3kM8wZ6rUY+ltMDg
Tky6G5u1rCNDcMaIHEhIvyUyENkmRC7O77pONxOlMxOLTMzO5sChGqIf20IB2wMQ
s2px2sTpSNuLm9aVRLqihDE2ASi6F7Ae65LwaCSbjb7wVzT4vMZ+9G1GUmCjetsZ
gA+omRcksL35tTd2cQJGs2V95Ips1L10VlVbARA5V94/qDsPVU/CdOJU/c4Skd+Y
SqPrXX5CFS9J2ayRyX3CigtPWwtOmQnZ0pFNv7eM5xRA/sf6iSCPSMsZbupw9cTR
4PeBSVhc79PPx5AQLLLn4mL7FkZEsJLPhGZWh3kAJefrjGVi9Tygn8TEBlkljen1
9MZdzuKwYdlYwfXRxQbm7Wz9rkzpdFl/ft0u8lCgKmhm6P5TeD8+/2wmDTIMaeno
p4qj7cVwWN1tyiY1FAysief5i5lxU0PiHaZrbBOIm3yF
-----END ENCRYPTED PRIVATE KEY-----
`;

const testEncrypted1CharPassRSA2048KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQIJ5OhvkbohLYCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBAkHpqEFM1xj+isW8FKGfHXBIIE
0Ewg3/7JxdunSkNucwDOeoIaKJMoFqWAhGtHPwJUnTXx/Egh+AwADrKNtiPNNE/Z
DVNXQnBf85aUG4WShgC/k22ZlpJ4O5oOkGKalNtf/zrnHteGgY6IULPqTDFfg8v6
A7zxTU+jyv3AU73LXGw12I2ruAtkTHxN028UFzSHkE8Xw8roSKkcQOwP4Mg1iJaQ
zhxH0wZrIt5kj0Y/wuuOcs6tSIVGBtgVAf4A7NYf3kNPmyQOaFGaPRqyu952+AfY
g/9BEy7bWyIA9S5QAnMQ7NWFTdXim3QARxEwqk1MZHoRG8oWhhpR2Wx9EpS9n2Qg
YFF7Gkm1xlvgEXkGWEk7MOgClCew4WyDENdPNd9TFOZj+D1TmTuWUWVtXejpOeqn
E5Trn0tAfakDWCQxBsadrp1hujGXnohmE18+Kc3qG70QpjiNpHHeKBNiaanIx6fo
fLCxBljeYCIkH9fbWITCbecB41aYowM8WWgbH2N2bzkbJcP9HRg6Fha7fr6XPlPM
ccp49BZ9S8VWBccuUkfUM61JWuihfFGHRnDL2ViLcmpf8e1CwooV8upIlmL1/bQt
Et2zIsS3S9UPFcCa17mBMOs9bCOXNzoRS1E4mXQWIU5pSOUcLOeEKA8W5TKrAaSh
E5Pm9andfT02f53a6mUukKbgExe+0B9tm2RNJv68oP9noUpzaxUd4SJnDE2URdND
hTAEUrMxT8C6xefY85sak8G9W3FKwAp6ykDSjcz6k70cwiUA11FXkAyn04wUkgbz
eefik3xChqu7L0kVttPgZ1bXwZQwykn3TMBOm0++uXciduImCWVXey1qAPQkVegz
w309iASLl3YRZTiYDB2Lr0VPUKjxpfAXZbb2Iit8/9ZHosNe7wZfhpPCHn9nEmae
SDWo1NtVpor8C/p8Y5NSmBJGXU/wpt737TZlJIt/ED/D2fEI2uWH2MUnWXuylBCp
bDXI6RcGR9jGIt3fcplWE9iTwB/Ij3sIesET8lsJGrycHlku03TGokmQrUmyWzkN
4iVrQA5ZQ4qiKcamPl67NkUluyV2GNe2uQohpjkFcSvBv5e/t4x/shl7inPZibuw
A3cQNdkMiIrdevvIfyYKWw22w134fjb9H57YrgAVYxBCLWNYnJF+lCTbu63n1f8L
k+QG0nFXcqqCnmqsIDN0+OSqTvQHvVWbFEeWpJFE/B/CYNbpPEQ752sQayb5jmuO
b5DnbgeIcqgLpPMMilloh5Ic1Ry18UqGyH5Pe2ejvSAotxWIz8vFu67JO/D7UA+o
xv5qerg9HNZ/XVNH3AX5VgZYlKmQho7uSQluCTk2J7HH9I7kVigFnI3pw9ObyaMl
tPyhf3xFHu7pR8EJy3Vxm3zRnAxQpp+vN/DCKS+cNWubdbU6ifB0V7LpjkV+lDWW
yyfaHEacuFyvkU9i1sCvgc/7zkpEyG1ibkzR5znvkWJJeSk+TlrH/g/RSELszO3W
aeWVMp2fJj4OGzP1F11EzrDg2I7aQp1vOtf/FQafubig5l98SJLUc2JAUMBbhmwc
XFwRlkofuVBkr/YrFZw2f7QqHntN8a1yzcF/cw8zEmdc4PD2pWTOi5QZrom1EcEZ
oIFEZILaSvbtfWjD7MdO9+Q/EsK7MWgmmk0TFMA/E7MN
-----END ENCRYPTED PRIVATE KEY-----
`;

const testEncrypted1024CharPassRSA2048KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQIU5wrTGgZa1ECAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBAtpzZrMhS+uekMAmTMz5fmBIIE
0D1CLtnDrcpFhieZ+iXOZHPVZFWK65pceD6coGXsRfaMw9Lg1MrEtTn3EfJbHG1v
WqMAPr/fkKzMljqcWa2W+5Ar0+yc7+P9KY3FlKruurMEwDIuBdjGpNYIDN2Un1Uz
gof15DdXyvrSAtUeQONVTKgtjRNf6jE6ce8NVuk69NCAVSuhIS6Y6+c7FZdsVuUL
n6kyNIn+T8CErC+uJLqp2qIVXsIwHwBwbaguRdIhWTnSAXfU1F8w8hOkhMzNr8NR
h+SyNDn6gTmmtt9e1TMHyGBUXIP0d+lgRPsihDSbdpIW4kQynu5FDppDodD6BdqT
ZY/uS+4Ude1pUY7j18vdCOi5eOQkmkyXYGqVmUgeA0J7mVnsugwZuNXKmmYyCC73
b2kM95xHZ6FA7+Sv4d1HN7o9CIgcTLXonAsKPYmCnL01tktZKWOnTIHkts2jrNcC
DTjXl89lQczTu3MsS0pgwhwxzBhXIrZPE5f8eMYEqf+oLBYAoyxqVKLy15yXs6UI
98kl8AE7Z8yBVMX0A32urcUny/dN796elZ0WJe2wKRBNYl+V2oMF0qgDjRGNp7l8
66ZGbSEdvdarV+AOECHB7uVEFRuyCxEhyQhcmktJCfefv3bXH0GCHYJQYMLmv0Ms
92MbRRq1mw3Ft1jnj7Yj3yn2KlJMwEVFhKKmURWNTJT2WdyCGSTeYkB/HRKBrjol
w7yeKQ8MBh1Nj+6AK8kZ6s1VezDYUlmYqSsWENGX0Zign7+weQDKaS3D8Uoq82sV
5d5jslLhKaLp2WFsobgUCp58oQf37jdvO5obJrWa+vq3xYNUST/SSeRMirmwowXq
u6YA2+r7ke3/qKEXyWCYZ4/yaMZHxB55NEm/NRH33sMroLAqgQ7wftBsy4CuAajE
kQNis4AEgchS33pYo+dLXpckIzR2K5G5IrNpI9LVoReBB1V5oAsXW8/zlY91fvoi
BrLyrojLKUKyu+UU7kOOHjNLd0sxQ9mnfnbWQWunaBNqb0q4YhPIi1rjcXDaFoGK
Zj3DmR9bILFbATQaM0B+zTXsIBDJcFBMIAu25eorpbALMP/ukBszewRgbNgu+SZ6
wlOUryOEpa+mqP1PcZ8Gamd70XRSNvdTYtUlNbd/cwIbW1I3nEbEVcc6lPozVLRM
fXXJceW2fh5TE0xxb5npPPS2BQvj4g4yFd5ST14S659qkiHuemSVdwR/Q2Tr0l3S
Tq+/Q7G/dFO/386MEtutrr+YXgduogUmMYyFKWljYqtaI4l9WHagoug9yncsP5Ak
RsFiEY6HQ2aM00YNeNyzhGQ7VH/KzwYhbHGbRxzWFbKZIVlA8Kb5TP9G9ujNAIPn
KmSsYxoQUquzqyvdqxgWeSWtfNUE9BJJZXRv0OcKfVBw0OkfbwNgFr1RBibywZU3
t1O6mtbzL0y3His7QQY83DtkCtzEU/QZnPx/CO034hsCoIAPskf+rDZjX61QzXTt
Wd1+l9SRVh12NBzqqBKM86+Aohq9d9yTgxmZr6YZbS8fO4Esn2loEbYIOgPS2doc
yz3tTbII/FkSqeAaMH7d96fU65PdkJMX7GYXnbjgH9h6lHidt6gSg0Bp26hltTgk
GQE7/Zh9TMFIXvYYlloQnA/JNshEJLTNEKiP9QnFWslI
-----END ENCRYPTED PRIVATE KEY-----
`;

const testEncryptedUTF8CharPassRSA2048KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQI1AcqjrTLhkQCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBAnJJCdj95adyowP1tQXvVtBIIE
0M1P8NQfoqzx+G8+KDPdapiZmodyzJj4Mfg4o8EokUOcF3kj1ql09OOrL1nBGM2u
m4kt/HDB2IO+iZjaGAhLmkj1KQ731Sn2EL5j9LIM867T+K7iYHwKrBWGlwIUdNsl
CbzMaiswdg6oRzuaVFm51J2UGC6sPUbvVFUx9E5uc+77c/um3ICp9la1dNV29+KA
uF8GjixVpRD0uVNAD27QX7CPAzmlR9U7eysLs+lp9+IrR1T2brOA8iWGsfCBclV9
nFUOTZL+LXBq/ujMSnHax+7tgs0wDbC2MBowTVMS5z/tdxyMFk3p+Ung/MMbi2oK
77uMEMdISxBkUU339Qrjzejw8gAphgWYG0O/lvKU36a4xA5U57peZJCUBTfl795I
C0h6OCQSSYPFceG64ztDdyhPPnkdo8Dz1FDneGLqO280gpzJ8xM50PdsF4nJe9ij
8qWFqGAuEpIhIf8/LY6B+02XQd7YD4obTiPAza5l+5uXCaV6o9UNcGoX0vb9Bz+C
/+oC7m27P+p6CQpkjdC1s8d6KpPJgdkhPuLuzRgoGlAbdO3+N8sSL3ocAYh+JgW1
2t7uIjzovOl2VEyfDNRcYbGqon9/y7QTHH35oMX+dP76uE0YvN4SeLdb07KfhYgv
cGjZD+DLglVVI+HCn511BA5keKqdwMHXkNPax37mv+qJIEbkBUqZIDeHtE7HLD7k
4g0M08/k9C8iw8k/iJkBpHULLNoamhvRL00j64y8UebGq6VIB5+W3HHDNI6piPd3
rRyaSXYXGjp+aQTxJ0qZuRN7sQ600DITEZjAChp/bDqzg6kcaTvKTP/CRMpagFKS
kJD+w4/0KrmqEEr7Sdikx7z1gy0nQCvakIJW2Up8TiGUn8ysihqIZLWaMtYqowNd
qznJXEmfG7ZbwU7B9qaYklmIttULkwlLXgGnJ2+AhAoswERdAkUPHmzwywNkNMAN
OV6lENnsV5fTkFueCbCT8y05c4IVtQW71idadsLwLW6RCTeRNVbA364Vy5Xpvbah
0YnkNk44aob/tQsFVeGZnLEjjLHqeb2DdaDV3yaK++XR/d18CViSvcDUrX7pRNCF
2nFac9HGIkiE0U1CAfoaJkbj0N528yHFQPsAjET3l2haX5zkN4nH00IjiUSzbg8C
9WmgXw8U0ArA3pjwdcbLaeUyPhuD1JzeGr2FxQK/yEDhLzArlULQNX2e4ZyvbMNn
SbTnbypyaG2Dr6qlXxeHifQzp7dA8fCyApjV6d1N/qqeEvwRS1p6bqLR09zBP6AC
oV1NWgrnXxk93Cls2yFBpbTri//0AUPdSO0dhp9gqqRhDgr5c4IoxCeMbtrF8/5A
kpc/5O5C/wJbw+wJf/aFELVnPop88Lim/U4xJKSvvM9zlFST7KsNBE8DyvXpxojM
dwseI1QPQ1ierv2HHEXzy/uh5sQG2L7Id+esumJ+rWNVPO6MIS0ihdlAQnxhmAvi
6fitKFHriRbk1wBi0ypsbjovFD7siiXjfG5kqdSqRFNyrK9lb/u5/PWKoJDR5aIV
B69aZuta/Cs1ADf1xAptOofbbhyKIa9Z4z9M8h0Q57lXmI4WxAnTg6eM+9tHnKrj
xRHVUoqnwT0MlXWqRp2ysH6NZFDcHP4b4fkpDZJP9hwQ
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA2048GeneratedInApplicationKeyPEM = `
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDb5fNd2PwyKQKH
TE/tPC5SwMuRkkUBuN8bcjPq5OU8u8dkdW3ytyhJawQSjr5isuYlTlQ4v9N6CpD5
gYOKB4g36eeP0wfOkM6T1zk25jNgwAwDvEBEo4JzHrJq4bHIMEYJM34DubW8ZZpx
gzDF8pSnEfH4DQJkzc5wID0T5+30hshMStEhrJQUNXWfPHYEp74NxSap9wzQSUyb
PesVY8PfLpY5YfpRJnev3SEYOmT6m8pqeO9bolBCBgs+myNOwvBbuhdOI4Zlxl6Z
6wywqsZ2n4Faydw94n3e/vz4PSYxE/ym8lYlyklI5gTZ04O6QTTlz6K/ekYPWnhW
9Ca/1mvxAgMBAAECggEALA8Pyu7t4PL8kbVFkmfrdCMy5nDjKKws76fbJSZFk/yf
v84TgH0YMlWh1EILfWUQ3cqq70/oBFzXnVZIz8Agl+tivRtwRgAXk+GckhZflvQD
tD/ktJv6SCyPXQDpiQ27Cp7pkb+E3UGSR0oc3Jx1EmBzFdstbpsZ0Ld05Wcj80kq
1MKSPJdswAzyQsJRZHk9toP2DIfrCbF5OiOdHOOBI3Zp/MgAqY/74nhozLGRMW1Y
cXfmGPnHVWB/0RY2z1gsHsUPnwdsvgTh5Ng2sK6M5wRHdGLk74GBXl51edLUp86w
AZ25D8krxYjuFGinWCpB6BoKmzLlFsf/6KCYOKWz0QKBgQD8+dwH9BHRWDidL0yk
C3hcFe1c2JCk5Y1e6h18rkqzQVROjS1y02YGmlg9ThXJL+NF4TYMc9yUjFH8OYfA
Xb1ciPaYgqdgM1r0ZMNT0zVPWS+iovouSb6QbMYJ7qrVHFAl8nfZmS/G0Vi1grMz
TEeFlP8tJasj1jNWjKGSmqz69QKBgQDeht5mT7+U6Ol64eXzzYCFUaCunJYe5J82
cD9iwQAwC2iXRTpyhayHGwLd4V/5wxFh4E23CsoTJUgHRL+iY7xXixLp7Dyx1koe
HuOI40iOEe5PlgSkuW4DoolacBggfCoPHrxyf7tUbGz5TG2eunwcVFgUBPfQ35ZS
p3lC67WHjQKBgQDh6sU7+RR8bxvIC/iWu4OWQSLD+sdZ64KP0+XXddNSODJxIBUJ
aY7AsM/Cl9xO2kxOGKzq/AFuS83fwQThnxU/8TS/yFZvTA2bGe1yC7mdDhnDVWa1
NbhQREOrlQ/M18cfzGSJ2ArZtBVTq9AbLLDms8Qa7nviuiUI0vhr82QtjQKBgC1O
KjOMYwYPUZHqMiYsHdGG5/8E9G9/voaX3d/eSYp+mCHMP3UXkCPFtRS1kRPJyl0y
DMCKms/BFGQedCG8ypjMQOKNbWILrfVp9otlMt1x+yIK+hELi8GDsxFNpyvd+7Yu
XNG2/c3XcWxkSiE5+JDP/0q8JDRLgVB8tmyQjtn1AoGAGSjsLybdma9ZgCste72V
x09hTlp43yZQAtTEqHFOKZSmQVslEmxT9g0kxwjIyKMx0JgxoK72eMS5i78ueUUz
+sHvjYrCwYFL6EN9/yzQ7CMuGtYZ1LSi1cr0YKouP2Bq/DEqOaiu5Rs/Kx2gl+OF
G0MH9M1KVQJeDK3qYEg7GnE=
-----END PRIVATE KEY-----
`;

const testEncryptedRSA2048GeneratedInApplicationKeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFbzCBkQYJKoZIhvcNAQUNMIGDMGIGCSqGSIb3DQEFDDBVBECHjqy1tRrieMrZ
qP2vMWQ+Y1ZI9JVRpNY7df15Jz4X5Ui8zWoy1s0q1hz0LwDcTh81ZJCNKSWmBYPy
19SdlWmiAgMJJ8AwDAYIKoZIhvcNAgkFADAdBglghkgBZQMEASoEEGoMsK5UbOC4
QI8xEcGfHuQkggTXBIIEAGyqI4tkNekqWw/9/D/FqHdsKW1eJ8q7gcq2TGVGm8pZ
DrxGrgcfZTgSilWfFGD7oL0NTz8+UAZGnYfUN0JXBxjdNSNhniC+si9Y2CEoEk/4
oJOZTIG+dEgrG9U6l3Rqwf5gHG6zWhQu1GjYo/tMtbv3Jbjlehh7ARl6jrJVW/AA
3fQmbqGA7ZS+g7fpoIuAK1liG9yuYNyaAlrnJpRx4emg4IvcVP+Hw7hqlnuM0lYZ
4a3NIgsubpnyC1bA3NtWS0OpBdlYZQUUSQH60f188PBE6XCt/CifsIF9oWuY3Sgt
zSI2v10W6RJuLWlCns0ex7ldKVSsi7TrIBx/8PCPhPA5VWbCXkCdtdb5HRcwRD1i
J1soz7IK+uv46/0sd0uXkCmj3sJRTFazrvHLJZpJd2wYDgO/PwSEWz27cZyutti8
IXIN7exjF/zE/ByECzTg8QcU4sUeeb1uo4oGBkSTjiLNaLRNSMptiOLMPY5HiVJB
R2pzQeKuBgXQqWWM4aPptWG4IMJ9acXXdUMYSa+nMsXNgMdQwIFwg74Urqfx3ir2
2b+JgSt3+TqnLOXS9Y1ynK7lLUki/ErMFWLMKBvrd/NJ0KiOcg67j5nnNxehmn5U
95NDis3c+f7Cs/UEEb8cElV/9wnL1uNbNqYXveKdqLK5kKork482qsM5NWXsnFnj
bpBsS61G3N9Zu6EBUsk4bGE1mY9M/jWstApxkVg73mqy+FNIcjcNZmf5XKLnYSGz
IYeWgLQREiG3/G1KajExS3jEJ16F+kex5zZvDRs7QrIl+oQNT/VD+R7uiBeFAJyX
1ZPdOxyiRb2tqTqkWEl18b2wCHqbckZfnpLvGj7CoaCSxoo5oJeEwIJa3JgFust/
G6NthJb6dGxDaP5c5bhW//3ZyDyH9ZEsOPM//bEvK5wMCNTZJflUPL4Kjx8fQXfx
bnl63Dg4jVux6wviwBrLZbAm6ussQp+OYv22uZ+srnsXRxiYoRGKGdzvXJXZy14Q
rhjPC0XQkaApUapqsAKiMsMynaos8mRvafvcMVXOQmiDhPghgu7I1aXqeaY3ihyS
KooHQkutOfq8/J6BgLfPvWpYeKGAypNzvtb77+zzGriI50m5Tk1dy2s44h6caDvh
4DdL3vS3S7Gv7TlNkQ9VQQt26IEfEYF+mAEyDXfxvFtpMsudVzARZYBeXqfkrNuB
g3kUTr1s/4Nhi3X6kUMujZSmTxrksnfPSPOlEm4ycB63D7/gdQO71w1M6/sh+f57
qjCaIuKYs3ea1sfJ9B0uxokK7EPn2jpD0CSKsqXuVs3QeFmoldN6ma4TyUQD5mFT
cllK9wpqGhfPYzkfgzyNw49b9Ks3Lo7YbnP63hMAvj0EgdD7RY4fGLCmnf899KFv
rQHydgQ3FC8OVq0gU2z50AwJ3B9/UIVgiIebf9woIHpTH+EW3x+uZ9kMyTvXRT9q
uKbGsPJUd5M9Qui8Ua1B8tSACb2je7WO7lC/rFVzGFiBsGKRXKNn6oELocV7D4qv
uWRa9gF8cfG6MdPHtj6JOnfouIkjfBN/dZbLB0iVR01Ae0dd6kD0TF46TgLnz9bL
muvqlitoaTG35IobaZMjWxmiVyYT1AgnDzIEqWdfYmAzb3NDdHR04M6uqeITBDpj
G77t
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA3072KeyPEM = `
-----BEGIN PRIVATE KEY-----
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
GWgVw1PHQk7dqNYuKPu2fRkv
-----END PRIVATE KEY-----
`;

const testEncryptedRSA3072KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIHbTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQI7NpCF4NX+8UCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBCxz7B6zA5fCbLF/FWfUOsYBIIH
ED9tudmkMiqoAfjFddF60DRVbicUK1dLnvqcwNqDldjAo29/bzJhUIWWZr5U8k7k
wbdX7E7dMSW8XZlYE36/eQcKndkcaAXySXt7COJMLP1zcHNtZw819oEqE7wcG82c
D4RDdTnm9iGOb5Mr9TS4HspYgf441aIL/jqT4BLsVH571vS3JckeXK1k7vTVsL0Y
1tPTwics3i2Q1KKd8UrjkA1aHuQ2g6fkdnjYRhIm/5dZmrXJ1+ECbqOHvbEGU86n
OnpCtl1A5gpk03xHcIgV5625lx8quYq74wiD9CFBbwZ4xyc6MlhPoyFm/2E/NhIT
cBvqocqfnV3SjZwhKQoLtSVQFfkfCryKZ6D6Rhq7Nxw/k4fb2lGEecqy13KlSidW
eD+AnGaSsQn9f0B8T984zREIJv2ZZgU/VdRGs7+HHB7Gf8FCEq9SH3AFVtAkk2Ki
Wy1k9zCbGAm4JxjVXE9ARbcqm3bdS98qJQ05rJvlh//IN0whJdqYgcg1fYhxTO96
7YghXEWKRCg0ChmlNkbjvX1KWEXeO5nYS8Kf3vYLBLloyAgYGVGA4lFG7/Msioi2
yca+zvCPw87FQJT/s5v/nMTcR1IWuSyj9cgIa75HO7A7KYMxb+h10kdSZmlc8Rtz
XsNDqrp4OVK5ojmEz6sQ5NQHCPziJzRhqKX/v32qV5HdFQOHIpiGZnDGvYJjlt32
1WRhB9fOnc/fKFyLvHGmWSCrobRas+RSUmUiak1ZpTa/kGKrAmXBUNROSJgmuHmc
3zwda3O7kfXTeeCcEYYmPlHmVNH1JzK6bNV8wGhH8fW4b1MyYV1eDaIGZLQ0HIKk
7TmRm+QEOXovhpTlY4/c+eM2IJE36mKqb5B8dspJctYOyAjKwci65B6KV0PAKiCS
3xd1Ms8Nm3CFvsc3U+oD0NzNo4sym3k4xJAy0paqlipynTXbhXeIOtrAb1dguXeR
795VITYu4O4kLXfUzsWbRQxv8qQPSEuuIfMtAdAV/4fJ8T0w06PaxZipElH9pf/c
M4XF1+wo23qJcy4EFH+dstNBdtK4JUzq/pcPFoCWlSi+FOID2wkHsDRRV/t8yDpu
GEbtwRg1I0rqKZqmTAhxlgLw6K9+OyY7ygAUWItdwv2HMy3LCXaSWxI0yNar63e6
cTO2YiJ9j+h93opOhJ5G96XnYxnsXN0eiwFhysibgt61m0X9dH2qKMp08NNwTmZx
myoTwr3/lPxe475tuTuYVt8v0foV3ZuJYHOwgkfGrRVVwKFJcvk6A6Eu7h64HTH3
6Kk+TCUfXma5bGft8G9GriAPgsWPFsw6JuTo+czpEfj8tKtUschiGciGga5oRHw0
lwALX2XasiMWIzqgqzLAPrp+bNOk4sQC8BEom6HKJFepVn32VcwyV1/ex5cdhf76
M9lxMA/CRGne1TtOx6OVNC0NVIx3tWs6txWCEoen8HvXN/n7n37Zb4SpQOQ5tnf5
RS0l5zWQLG8RmL2q2WfTwnx0J29nqXu4EC5Q3tXJn7iSUG3Yym8lBuLDDmgtOGdE
FtoZbHuynkOtCskvvGEtS1XCZ8ciTRGvvAwj7+AZYacx3tsSvjBNaaJmnxteLywD
oSr0+ZrO6mdKOYsl4NTMTOf978hZ5VOdcTgvTCdABJVBWihHhcC0kErU9MqIs993
UT5UQgLoEJ1j9NeARm4eIzkYSUx4DGFkmU7N4vD5tt2xxYmu3g7/rIYlZ+5XasRG
NR1xiG4dHqF35oPiH/aq6/g3J3ecaIG1rq3YDB0VnEmzmtJ3sicc+6AezgR2RbEv
VcM/wyYmqWin4wK9suz3DTcDohpu3wGZBosQpZwtO9YUmKENWOiVgqU2q0uwoeBO
FiV/vYV2UwAVbVfBSoLGXQv0oHCrR66McoQ3gvlLYdvgcZXA+8u9C1t1LUDpRtgF
pFYlmcADojomgv7oSbXC7m7Vh2mFYAPTrC45b9PzTfjfZd45rVK2SwjCpSs5Qhar
JcgIrzCjy3e3u2NgemR/9WJf6a+3FPE48qzn1O5JvMBgUCRM62mC4IZ+YV1poXJP
eLKExdQLQyCut/u/S2xXynI1E9SZ+ZpiXf2QHUoBqiorEIxdVDpD4BnyEraN/+NE
v7XJPCihyUtE4gTbRHjnLvaB7us93xcSwpfDRGHPARCjxWVqB21zq9r3qZx9RQl8
v08W16cCdiZOh+RWXv46GF2YVOHNR5CpMu7sh4aQG3v1RvihQMecUs0WBPNej7wL
+7Y/Y+9P/GfJff3D37SWB8xYz05rrn31zS9oh6C8ZeGBilpyt2kNpbsJJW2FQtV+
6YvJ7T7/RcGMS6LYwgnVqWur9JWfoub+Bl15l4miKRQy/kkgI8NXrINshcd8A7Pz
xNey+XB1DLte8F3NToxd0yoMhAvcyUxv8kDqfA+JSEuu
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA4096KeyPEM = `
-----BEGIN PRIVATE KEY-----
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
RFUIc1d/EkENqhzsUe5HWYWCDTbdOA==
-----END PRIVATE KEY-----
`;

const testEncryptedRSA4096KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
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
-----END ENCRYPTED PRIVATE KEY-----
`;

const testRSA8192KeyPEM = `
-----BEGIN PRIVATE KEY-----
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
ci5YS7Iwh1cgBF3wcoPMNeZ890Xy8mw=
-----END PRIVATE KEY-----
`;

const testEncryptedRSA8192KeyPEM = `
-----BEGIN ENCRYPTED PRIVATE KEY-----
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
-----END ENCRYPTED PRIVATE KEY-----
`;

// testKeyUploadFailure tests key upload failure.
async function testKeyUploadFailure(key: string, password: string, errorMessage: string) {
	const user = userEvent.setup();
	errorDialogMessage.set('');
	render(Key, { props: { ownerId: '1234', password: password, keyPair: undefined } });
	const input = <HTMLInputElement>screen.getByTestId('input-load-key');

	const file = new File([key], 'test.key', { type: 'application/x-pem-file' });
	await user.upload(input, file);

	// Error should be set.
	await vi.waitFor(() => expect(get(errorDialogMessage)).toBe(errorMessage));

	// No key data should be presented.
	await vi.waitFor(() => expect(screen.queryByText(/SHA1 identifier/i)).toBeFalsy());
	await vi.waitFor(() => expect(screen.queryByText(/SHA256 identifier/i)).toBeFalsy());
}

// testKeyUploadSuccess tests key upload success.
async function testKeyUploadSuccess(
	key: string,
	password: string,
	keyType: string,
	keySha1: string,
	keySha256: string
) {
	const user = userEvent.setup();
	errorDialogMessage.set('');
	render(Key, { props: { ownerId: '1234', password: password, keyPair: undefined } });
	const input = <HTMLInputElement>screen.getByTestId('input-load-key');

	const file = new File([key], 'test.key', { type: 'application/x-pem-file' });
	await user.upload(input, file);

	// No error should be set.
	await vi.waitFor(() => expect(get(errorDialogMessage)).toBe(''), { timeout: 3000 });

	// Check loaded key information.
	await vi.waitFor(() => expect(screen.getByTestId('strong-key-type')).toHaveTextContent(keyType), {
		timeout: 3000
	});
	await vi.waitFor(() => expect(screen.getByTestId('strong-key-sha1')).toHaveTextContent(keySha1), {
		timeout: 3000
	});
	await vi.waitFor(
		() => expect(screen.getByTestId('strong-key-sha256')).toHaveTextContent(keySha256),
		{ timeout: 3000 }
	);
}

describe('Key', () => {
	test('unencrypted key generation works', async () => {
		const user = userEvent.setup();
		render(Key, { props: { ownerId: '', password: '', keyPair: undefined } });
		const inputOwnerId = screen.getByTestId('input-ownerid');

		// Generate key button should be raised and disabled when owner's ID field is empty,
		// with tooltip that explains disabling reason.
		const buttonGenerateKey = screen.getByTestId('button-generate-and-download-key');
		expect(buttonGenerateKey.getAttribute('class')).toMatch('mdc-button mdc-button--raised');
		expect(buttonGenerateKey.getAttribute('disabled')).toBe('');
		expect(buttonGenerateKey.getAttribute('title')).toBe('Owner ID field cannot be empty.');

		// Load key button should be raised and disabled when owner's ID field is empty,
		// with tooltip that explains disabling reason.
		const buttonLoadKey = screen.getByTestId('button-load-key');
		expect(buttonLoadKey.getAttribute('class')).toMatch('mdc-button mdc-button--raised');
		expect(buttonLoadKey.getAttribute('disabled')).toBe('');
		expect(buttonLoadKey.getAttribute('title')).toBe('Owner ID field cannot be empty.');

		// Download key button should not be present when no key is present.
		expect(screen.queryAllByTestId('button-download-key')).toHaveLength(0);

		// Type owner's ID (max allowed length) and check whether key generation and load buttons are enabled.
		await user.type(inputOwnerId, 'a'.repeat(OWNER_ID_MAX_LENGTH));
		expect(buttonGenerateKey.getAttribute('disabled')).toBe(null);
		expect(buttonLoadKey.getAttribute('disabled')).toBe(null);

		// Download key button should not be present when no key is present.
		expect(screen.queryAllByTestId('button-download-key')).toHaveLength(0);

		// Click generate button key, cancel abort operation in encryption dialog.
		const spy = vi.spyOn(FileSaver, 'saveAs');
		global.URL.createObjectURL = vi.fn();
		global.URL.revokeObjectURL = vi.fn();
		await user.click(buttonGenerateKey);
		await user.click(screen.getByTestId('button-confirmation-no'));
		await vi.waitFor(() => expect(spy).toHaveBeenCalledTimes(0), { timeout: 3000 });

		// Download key button should not be present when no key is present.
		expect(screen.queryAllByTestId('button-download-key')).toHaveLength(0);

		// Click generate button key, confirm no encryption and generate and download new key.
		await user.click(buttonGenerateKey);
		await user.click(screen.getByTestId('button-confirmation-yes'));
		await vi.waitFor(() => expect(spy).toHaveBeenCalledTimes(1), { timeout: 3000 });
		await vi.waitFor(() => expect(screen.queryByText(/SHA1 identifier/i)).toBeTruthy());
		await vi.waitFor(() => expect(screen.queryByText(/SHA256 identifier/i)).toBeTruthy());

		// Generate and load buttons should be outlined.
		expect(buttonGenerateKey.getAttribute('class')).toMatch('mdc-button mdc-button--outlined');
		expect(buttonLoadKey.getAttribute('class')).toMatch('mdc-button mdc-button--outlined');

		// Download key button should be outlined and enabled.
		const buttonDownloadKey = screen.getByTestId('button-load-key');
		expect(buttonDownloadKey.getAttribute('class')).toMatch('mdc-button mdc-button--outlined');
		expect(buttonDownloadKey.getAttribute('disabled')).toBe(null);

		// Click download button key, confirm no encryption and download new key.
		await user.click(buttonDownloadKey);
		await user.click(screen.getByTestId('button-confirmation-yes'));
		await vi.waitFor(() => expect(spy).toHaveBeenCalledTimes(2), { timeout: 3000 });
	}, 20000);

	test('encrypted key generation works', async () => {
		const user = userEvent.setup();
		render(Key, { props: { ownerId: '', password: '', keyPair: undefined } });
		const inputOwnerId = screen.getByTestId('input-ownerid');
		const inputPassword = screen.getByTestId('input-password');
		const buttonGenerateKey = screen.getByTestId('button-generate-and-download-key');

		// Type owner's ID (max allowed length) and check whether key generation button is enabled.
		await user.type(inputOwnerId, 'a'.repeat(OWNER_ID_MAX_LENGTH));
		expect(buttonGenerateKey.getAttribute('disabled')).toBe(null);

		// Provide password and click key generate button to generate and download new key.
		await user.type(inputPassword, 'b'.repeat(30));
		const spy = vi.spyOn(FileSaver, 'saveAs');
		global.URL.createObjectURL = vi.fn();
		global.URL.revokeObjectURL = vi.fn();
		await user.click(buttonGenerateKey);
		await vi.waitFor(() => expect(spy).toHaveBeenCalledTimes(1), { timeout: 3000 });
		await vi.waitFor(() => expect(screen.queryByText(/SHA1 identifier/i)).toBeTruthy());
		await vi.waitFor(() => expect(screen.queryByText(/SHA256 identifier/i)).toBeTruthy());

		// Click key download button to download existing key.
		await user.click(screen.getByTestId('button-download-key'));
		await vi.waitFor(() => expect(spy).toHaveBeenCalledTimes(2), { timeout: 3000 });
	}, 20000);

	test('uploading invalid key fails with error', async () => {
		await testKeyUploadFailure(
			testInvalidKeyPEM,
			testKeyEncryptionPassword,
			noKeyFoundErrorMessage
		);
	}, 20000);

	test('uploading PKCS #1 key fails with error', async () => {
		await testKeyUploadFailure(testPKCS12048KeyPEM, '', noKeyFoundErrorMessage);
	}, 20000);

	test('uploading key encrypted with DES-EDE3-CBC fails with error', async () => {
		await testKeyUploadFailure(
			testEncryptedDESRSA2048KeyPEM,
			testKeyEncryptionPassword,
			invalidPasswordOrUnsupportedKey
		);
	}, 20000);

	test('uploading unencrypted ED25519 fails with error', async () => {
		await testKeyUploadFailure(testED25519KeyPEM, '', invalidKeyErrorMessage);
	}, 20000);

	test('uploading encrypted ED25519 fails with error', async () => {
		await testKeyUploadFailure(
			testEncryptedED25519KeyPEM,
			testKeyEncryptionPassword,
			invalidKeyErrorMessage
		);
	}, 20000);

	test('uploading encrypted key with empty password fails with error', async () => {
		await testKeyUploadFailure(testEncryptedRSA2048KeyPEM, '', invalidPasswordOrUnsupportedKey);
	}, 20000);

	test('uploading encrypted key with wrong password fails with error', async () => {
		await testKeyUploadFailure(
			testEncryptedRSA2048KeyPEM,
			'wrong password',
			invalidPasswordOrUnsupportedKey
		);
	}, 20000);

	test('uploading RSA 512 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA512KeyPEM,
			'',
			'RSA-512',
			'91:42:8a:2b:ff:20:a8:e6:88:96:24:28:4c:5e:e2:bf:99:ea:fa:e8',
			'8c:70:ac:98:85:e4:91:73:ab:43:c4:35:2f:1b:10:8b:86:9d:7c:f1:af:50:04:f4:54:5e:21:ed:32:de:34:ba'
		);
	}, 20000);

	test('uploading encrypted RSA 512 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA512KeyPEM,
			testKeyEncryptionPassword,
			'RSA-512',
			'91:42:8a:2b:ff:20:a8:e6:88:96:24:28:4c:5e:e2:bf:99:ea:fa:e8',
			'8c:70:ac:98:85:e4:91:73:ab:43:c4:35:2f:1b:10:8b:86:9d:7c:f1:af:50:04:f4:54:5e:21:ed:32:de:34:ba'
		);
	}, 20000);

	test('uploading RSA 1024 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA1024KeyPEM,
			'',
			'RSA-1024',
			'28:9e:3f:3b:f2:13:75:b9:49:18:75:29:5b:80:33:ed:d1:ea:a9:50',
			'45:85:17:cd:71:4a:3f:d0:4b:4b:25:9d:0e:3a:f6:fe:93:49:05:41:a2:79:98:50:d0:58:b6:5f:ff:cd:04:ff'
		);
	}, 20000);

	test('uploading encrypted RSA 1024 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA1024KeyPEM,
			testKeyEncryptionPassword,
			'RSA-1024',
			'28:9e:3f:3b:f2:13:75:b9:49:18:75:29:5b:80:33:ed:d1:ea:a9:50',
			'45:85:17:cd:71:4a:3f:d0:4b:4b:25:9d:0e:3a:f6:fe:93:49:05:41:a2:79:98:50:d0:58:b6:5f:ff:cd:04:ff'
		);
	}, 20000);

	test('uploading RSA 2048 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA2048KeyPEM,
			'',
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading key with mac newlines succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA2048KeyPEMMacNewlines,
			'',
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading key with windows newlines succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA2048KeyPEMWinNewlines,
			'',
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading encrypted RSA 2048 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA2048KeyPEM,
			testKeyEncryptionPassword,
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading RSA 2048 key with unused password succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA2048KeyPEM,
			testKeyEncryptionPassword,
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading encrypted RSA 2048 key with 1-char password succeeds', async () => {
		await testKeyUploadSuccess(
			testEncrypted1CharPassRSA2048KeyPEM,
			'1',
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading encrypted RSA 2048 key with 1024-char password succeeds', async () => {
		await testKeyUploadSuccess(
			testEncrypted1024CharPassRSA2048KeyPEM,
			'a'.repeat(1024),
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading encrypted RSA 2048 key with UTF-8 password succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedUTF8CharPassRSA2048KeyPEM,
			'żółwik ½Ђ #)(&4e)%//][,.d] ☎ 💩 注释 Geändert',
			'RSA-2048',
			'c9:d8:aa:ed:2e:f3:f8:85:16:a2:2c:3a:7e:b7:20:32:cb:74:bd:b5',
			'd0:24:7c:bf:54:db:fb:56:87:24:ed:0f:0f:f4:2b:2e:3f:a7:ae:4c:d4:86:b8:6f:9f:3f:22:c4:a4:81:10:0c'
		);
	}, 20000);

	test('uploading RSA 2048 generated in application succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA2048GeneratedInApplicationKeyPEM,
			'',
			'RSA-2048',
			'd3:a1:84:1f:71:04:10:8e:5e:fb:c3:c5:be:0d:c5:bc:92:de:d5:2e',
			'27:55:cb:ac:26:ca:d8:c3:4a:11:44:cb:a9:b5:3b:3b:ae:3c:1f:f8:59:96:67:98:3e:d6:e1:d8:63:4a:1d:02'
		);
	}, 20000);

	test('uploading encrypted RSA 2048 generated in application succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA2048GeneratedInApplicationKeyPEM,
			testKeyEncryptionPassword,
			'RSA-2048',
			'd3:a1:84:1f:71:04:10:8e:5e:fb:c3:c5:be:0d:c5:bc:92:de:d5:2e',
			'27:55:cb:ac:26:ca:d8:c3:4a:11:44:cb:a9:b5:3b:3b:ae:3c:1f:f8:59:96:67:98:3e:d6:e1:d8:63:4a:1d:02'
		);
	}, 20000);

	test('uploading RSA 3072 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA3072KeyPEM,
			'',
			'RSA-3072',
			'9e:e1:07:bb:d4:7f:2c:25:22:27:03:d8:98:a8:25:78:2e:b9:fc:96',
			'47:7b:66:b8:56:2e:ce:84:cc:31:6c:04:db:a3:50:a0:71:66:1a:26:b9:00:16:cf:28:e0:07:13:d4:0d:df:16'
		);
	}, 20000);

	test('uploading encrypted RSA 3072 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA3072KeyPEM,
			testKeyEncryptionPassword,
			'RSA-3072',
			'9e:e1:07:bb:d4:7f:2c:25:22:27:03:d8:98:a8:25:78:2e:b9:fc:96',
			'47:7b:66:b8:56:2e:ce:84:cc:31:6c:04:db:a3:50:a0:71:66:1a:26:b9:00:16:cf:28:e0:07:13:d4:0d:df:16'
		);
	}, 20000);

	test('uploading RSA 4096 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA4096KeyPEM,
			'',
			'RSA-4096',
			'cb:16:ac:50:5e:2c:34:6b:0b:4c:84:e8:05:96:c3:10:10:fa:72:a3',
			'e0:bb:fb:8a:db:6c:42:c1:00:94:8f:8f:82:9f:28:0d:51:d9:04:16:df:bb:f5:0a:c7:61:fd:e6:11:00:87:d3'
		);
	}, 20000);

	test('uploading encrypted RSA 4096 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA4096KeyPEM,
			testKeyEncryptionPassword,
			'RSA-4096',
			'cb:16:ac:50:5e:2c:34:6b:0b:4c:84:e8:05:96:c3:10:10:fa:72:a3',
			'e0:bb:fb:8a:db:6c:42:c1:00:94:8f:8f:82:9f:28:0d:51:d9:04:16:df:bb:f5:0a:c7:61:fd:e6:11:00:87:d3'
		);
	}, 20000);

	test('uploading RSA 8192 key succeeds', async () => {
		await testKeyUploadSuccess(
			testRSA8192KeyPEM,
			'',
			'RSA-8192',
			'09:a9:0b:8a:2a:d3:a3:78:8c:96:5f:32:a5:16:14:0c:6c:11:64:71',
			'cb:15:26:d3:b0:88:02:91:16:1f:26:06:48:0d:5a:03:a6:b7:f3:42:e7:27:a3:a9:c6:b2:e8:e1:61:b4:ca:3e'
		);
	}, 20000);

	test('uploading encrypted RSA 8192 key succeeds', async () => {
		await testKeyUploadSuccess(
			testEncryptedRSA8192KeyPEM,
			testKeyEncryptionPassword,
			'RSA-8192',
			'09:a9:0b:8a:2a:d3:a3:78:8c:96:5f:32:a5:16:14:0c:6c:11:64:71',
			'cb:15:26:d3:b0:88:02:91:16:1f:26:06:48:0d:5a:03:a6:b7:f3:42:e7:27:a3:a9:c6:b2:e8:e1:61:b4:ca:3e'
		);
	}, 20000);
});
