{
	"certificate": "Certificate",
	"crtDoesNotMatchKey": "Certificate does not match key",
	"crtDoesNotMatchOwnerId": "Certificate does not match owner's ID",
	"certificateSignignRequest": "Certificate signing request (CSR)",
	"copyCrtToClipboard": "Copy certificate to clipboard",
	"copyCsrToClipboard": "Copy CSR to clipboard",
	"copyToClipboardFailure": "Copy to clipboard failed!",
	"copyToClipboardSuccess": "Copied to clipboard.",
	"crtLoadedSuccessfully": "Certificate loaded successfully.",
	"csrGeneratedSuccessfully": "CSR generated successfully.",
	"downloadCsr": "Download CSR",
	"downloadKey": "Download key",
	"downloadP12": "Download PKCS #12 file with key and certificate",
	"errorDownloadingCrt": "Certificate was not downloaded",
	"errorDownloadingCsr": "CSR was not downloaded",
	"errorDownloadingKey": "Key was not downloaded",
	"errorGeneratingCsr": "CSR was not generated",
	"errorGeneratingKey": "Key was not generated",
	"errorGeneratingP12": "PKCS #12 archive was not generated",
	"errorLoadingCrtFromFile": "Certificate was not loaded",
	"errorLoadingKeyFromFile": "Key was not loaded",
	"errorReadingKeyInformation": "Key information was not read",
	"expiredCertificate": "Expired certificate",
	"generateAndDownloadNewKey": "Generate and download new key",
	"generateCertificateSigningRequest": "Generate CSR",
	"invalidAfter": "Invalid after",
	"invalidBefore": "Invalid before",
	"invalidCertificate": "Invalid certificate",
	"invalidOrUnsupportedKey": "Invalid key or '<'a href=\"{url}\"'>'unsupported'<'/a'>' key type",
	"invalidPasswordOrUnsupportedKey": "Invalid password or '<'a href=\"{url}\"'>'unsupported'<'/a'>' key type",
	"key": "Key",
	"keyGeneratedSuccessfully": "Key generated successfully.",
	"keyIdentifier": "{type} identifier",
	"keyLoadedSuccessfully": "Key loaded successfully.",
	"keyMustBeAvailable": "Key must be available.",
	"keyOwnersId": "Key owner's ID.",
	"loadCrtFromFile": "Load certificate from file",
	"loadExistingKeyFromFile": "Load existing key from file",
	"noPrivateKeyPEMFound": "No private key in PKCS #8 PEM format found",
	"ownerId": "Owner ID",
	"ownerIdFieldCannotBeEmpty": "Owner ID field cannot be empty.",
	"passwordFieldCannotBeEmpty": "Password field cannot be empty.",
	"passwordForKeyEncryptionInFiles": "Password for the private key encryption in files. For better security use '<'a href=\"https://en.wikipedia.org/wiki/Password_strength\"'>'strong passwords'<'/a'>'.",
	"pasteOrLoadCrt": "Paste or load certificate in PEM format.",
	"plainKeyConfirmation": "Do you really want to download an unencrypted private key?",
	"plainKeyConfirmationContent": "Encrypting the private key in a file further protects it from unauthorized access. In order to encrypt the private key in a file, you need to enter a password in the Password field, and currently this field is empty, which if you accept this download, will cause the private key to be unencrypted in the downloaded file. Do you really want to download a file with an unencrypted private key?",
	"pleaseWaitFewMinutes": "Please wait... This operation may take up to a few minutes.",
	"sendCsrViaEmail": "Send CSR via e-mail",
	"serialNumber": "Serial number",
	"type": "Type",
	"validCertificateMustBeAvailable": "Valid certificate must be available."
}
